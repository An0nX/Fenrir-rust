# fenrir-rust/.github/workflows/release.yml
name: Release Fenrir Rust

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on tags like v0.9.0, v1.0.0

jobs:
  # ЗАМЕЧАНИЕ: Мы НЕ вызываем build.yml напрямую.
  # Мы полагаемся на то, что build.yml ТОЖЕ сработает на этот тег
  # и загрузит артефакты, которые мы потом скачаем.

  create-release:
    name: Create GitHub Release
    # Удаляем needs: build-matrix, т.к. нет такой задачи в ЭТОМ воркфлоу
    # needs: build-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: write # Разрешение на создание релизов и загрузку ассетов

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      # Не указываем 'name', скачиваем ВСЕ артефакты из текущего запуска воркфлоу (который сработал на тег)
      # Артефакты будут скачаны в папки с именами артефактов
      with:
        path: artifacts/ # Скачиваем в папку 'artifacts'

    - name: List downloaded artifacts
      run: ls -R artifacts/

    - name: Prepare release assets and checksums
      id: prepare_assets
      shell: bash
      run: |
        RELEASE_DIR="release-assets"
        CHECKSUM_FILE="checksums.sha256"
        mkdir -p $RELEASE_DIR
        echo "--- Moving assets ---"
        # Перемещаем все бинарники и связанные файлы из подпапок в папку релиза
        find artifacts/ -type f -print -exec mv {} $RELEASE_DIR/ \;

        echo "--- Generating Checksums ---"
        cd $RELEASE_DIR
        # Генерируем чексуммы для всех файлов в папке релиза
        sha256sum * > $CHECKSUM_FILE 2>/dev/null || echo "No files found to checksum."

        echo "--- Checksum File ---"
        # Проверяем, существует ли файл чексумм перед выводом
        if [ -f $CHECKSUM_FILE ]; then
           cat $CHECKSUM_FILE
           # Используем heredoc для многострочного вывода
           echo "checksum_content<<EOF" >> $GITHUB_OUTPUT
           cat $CHECKSUM_FILE >> $GITHUB_OUTPUT
           echo "EOF" >> $GITHUB_OUTPUT
        else
           echo "checksum_content=" >> $GITHUB_OUTPUT # Устанавливаем пустой вывод, если нет чексумм
        fi
        cd .. # Возвращаемся в корень

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }} # Используем тег, который запустил воркфлоу
        name: Fenrir Rust ${{ github.ref_name }} # Название релиза
        body: | # Опционально: добавляем описание релиза или чексуммы
          Fenrir Rust release based on tag ${{ github.ref_name }}.

          **SHA256 Checksums:**
          ```
          ${{ steps.prepare_assets.outputs.checksum_content }}
          ```
        draft: false # Установите true для создания черновика релиза
        prerelease: false # Установите true, если это пре-релиз
        # Этот паттерн корректно прикрепляет все файлы, перемещенные в release-assets
        files: |
          release-assets/*
