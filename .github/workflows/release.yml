# fenrir-rust/.github/workflows/release.yml
name: Release Fenrir Rust

# Запускается ПОСЛЕ успешного завершения воркфлоу "Build Fenrir Rust"
on:
  workflow_run:
    workflows: ["Build Fenrir Rust"] # Имя воркфлоу из build.yml
    types:
      - completed # Только когда он завершился

jobs:
  create-release:
    name: Create GitHub Release
    # Запускаем эту задачу только если build.yml завершился УСПЕШНО
    # и если build.yml был запущен ПУШЕМ ТЕГА
    if: ${{ github.event.workflow_run.conclusion == 'success' && startsWith(github.event.workflow_run.head_branch, 'refs/tags/') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write # Разрешение на создание релизов и загрузку ассетов

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      # Чекаут нужен для доступа к README/LICENSE и т.д., если вы их включаете
      # Если не нужны, можно убрать, но лучше оставить для гибкости.
      # Важно: чекаут будет по коммиту, который вызвал workflow_run, а не по тегу напрямую.
      # Но нам нужен доступ к коду только для вспомогательных файлов.

    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        # Указываем ID запуска воркфлоу, который создал артефакты
        run-id: ${{ github.event.workflow_run.id }}
        path: artifacts/ # Скачиваем в папку 'artifacts'

    - name: List downloaded artifacts
      run: ls -R artifacts/

    - name: Prepare release assets and checksums
      id: prepare_assets
      shell: bash
      run: |
        RELEASE_DIR="release-assets"
        CHECKSUM_FILE="checksums.sha256"
        mkdir -p $RELEASE_DIR
        echo "--- Moving assets ---"
        # Перемещаем все файлы из всех скачанных папок артефактов
        find artifacts/ -mindepth 2 -type f -print -exec mv {} $RELEASE_DIR/ \;

        echo "--- Generating Checksums ---"
        cd $RELEASE_DIR
        # Генерируем чексуммы для всех файлов в папке релиза
        sha256sum * > $CHECKSUM_FILE 2>/dev/null || echo "No files found to checksum."

        echo "--- Checksum File ---"
        # Проверяем, существует ли файл чексумм перед выводом
        if [ -f $CHECKSUM_FILE ]; then
           cat $CHECKSUM_FILE
           # Используем heredoc для многострочного вывода
           echo "checksum_content<<EOF" >> $GITHUB_OUTPUT
           cat $CHECKSUM_FILE >> $GITHUB_OUTPUT
           echo "EOF" >> $GITHUB_OUTPUT
        else
           echo "checksum_content=No artifacts built or checksummed." >> $GITHUB_OUTPUT # Устанавливаем текст, если нет чексумм
        fi
        cd .. # Возвращаемся в корень

    - name: Extract Tag Name
      id: extract_tag
      # Извлекаем имя тега из ссылки (refs/tags/vX.Y.Z -> vX.Y.Z)
      run: echo "TAG_NAME=${{ github.event.workflow_run.head_branch/refs\/tags\// }}" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        # Используем извлеченное имя тега
        tag_name: ${{ steps.extract_tag.outputs.TAG_NAME }}
        name: Fenrir Rust ${{ steps.extract_tag.outputs.TAG_NAME }} # Название релиза
        body: |
          Fenrir Rust release based on tag ${{ steps.extract_tag.outputs.TAG_NAME }}.

          **SHA256 Checksums:**
          ```
          ${{ steps.prepare_assets.outputs.checksum_content }}
          ```
        draft: false
        prerelease: false
        files: |
          release-assets/*
